using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Valve.VR;
using TMPro;
public class MainMechanics : MonoBehaviour
{
    public GameObject Controller;
    public SteamVR_Action_Single squezeA;
    float triggervalue;
    int maxammo = 15;
    int currentammo;
    Animator anim;
    public Transform barell;
    public GameObject line;
    bool _Shoot;
    public TextMeshProUGUI ammotext;
    public GameObject magazine;
    public Transform Empty;
    public RaycastHit hit;
    public bool Hashit;
    public AudioSource src;
    [Header ("AudioSources")]
    public AudioClip fire;
    public AudioClip _reload;
    void Start()
    {
        anim = GetComponent<Animator>();
        currentammo = maxammo;
    }
    void Update()
    {
        if(triggervalue > 0 && _Shoot)
        {
            Shoot();
        }
        if (Controller.name == "RightHand")
        {
            triggervalue = squezeA.GetAxis(SteamVR_Input_Sources.RightHand);
        }
        else if(Controller.name == "LeftHand")
        {
            triggervalue = squezeA.GetAxis(SteamVR_Input_Sources.LeftHand);
        }
        Shoot();
        if(Vector3.Angle(transform.up, Vector3.up)>100 && currentammo < maxammo)
        {
            Reload();
        }
        ammotext.text = currentammo.ToString();
        ChangeTextColor();
        Hashit = Physics.Raycast(barell.position, -barell.forward, out hit, 300);
    }

    void Shoot()
    {
        if (currentammo > 0)
        {
            if(Input.GetKeyDown(KeyCode.F))
            {
                src.PlayOneShot(fire, 0.2f);
                anim.Play("Fire", -1, 0f);             
                currentammo--;
                _Shoot = false;
                if(line)
                {
                    GameObject liner = Instantiate(line);
                    liner.GetComponent<LineRenderer>().SetPositions(new Vector3[] { barell.position, Hashit ? hit.point : barell.position + barell.forward * 300 });
                    Destroy(liner, 0.1f);
                }
                if(hit.collider)
                {
                    if(hit.transform.GetComponent<Enemy>() != null)
                    {
                        hit.transform.GetComponent<Enemy>().Dead(hit.point);
                    }
                    if (hit.transform.parent.GetComponent<Enemy>() != null)
                    {
                        hit.transform.parent.GetComponent<Enemy>().Dead(hit.point);  
                    }
                }
            }
            if(triggervalue == 0)
            {
                _Shoot = true;
            }
        }
        else
        {
            anim.SetBool("HasAmmo", false);
        }
    }
    void Reload()
    {
        currentammo = maxammo;
        Instantiate(magazine,Empty.transform.position, Quaternion.Euler(Empty.transform.rotation.x,180f,Empty.transform.rotation.z));//что за хрень я пишу
        src.PlayOneShot(_reload,0.2f);
    }
    void ChangeTextColor()
    {
        if(currentammo <= 15)
        {
            ammotext.color = Color.white;
        }
        if (currentammo < 8)
        {
            ammotext.color = Color.yellow;
        }
        if(currentammo < 5)
        {
            ammotext.color = Color.red;
        }
    }
}